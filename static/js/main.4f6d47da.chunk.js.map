{"version":3,"sources":["components/NavBar/styles.js","components/NavBar/NavBar.js","components/Cards/styles.js","components/Cards/PokemonCard.js","containers/Favourites/styles.js","containers/Favourites/Favourites.js","config/index.js","containers/Pokedex/styles.js","containers/Pokedex/Pokedex.js","containers/PokemonDetails/styles.js","redux/actions.js","containers/PokemonDetails/PokemonDetails.js","redux/reducer.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["StyledAppBar","styled","AppBar","backgroundColor","StyledLink","Link","textDecoration","StyledTitle","Typography","cursor","color","NavBar","position","Toolbar","to","variant","sx","ml","StyledCardMedia","CardMedia","margin","width","height","StyledCard","Card","StyledCardContent","CardContent","textAlign","PokemonCard","props","pokemon","image","id","name","Grid","item","xs","sm","lg","StyledPokedexContainer","paddingTop","Favourites","favourites","this","Box","container","spacing","map","sprites","front_default","Component","connect","state","dispatch","POKEMON_API_URL","StyledGridContainer","padding","Pokedex","useState","pokemonData","setPokemonData","useEffect","axios","get","then","response","status","results","data","newPokemonData","forEach","index","pokemonObject","url","push","mt","CircularProgress","StyledBox","marginTop","borderRadius","StyledMoveBox","textTransform","fontFamily","StyledPokemonImage","StyledPokemonInfoContainer","bottom","StyledHr","StyledFavButton","Button","StyledText","fontSize","StyledMoveTitle","StyledMoveLevel","StyledSpan","fontStyle","StyledBr","display","TOGGLE_FAVOURITE","PokemonDetails","match","params","setState","found","p","console","log","weight","types","moves","src","md","favouriteChecker","onClick","toggleFavourite","pokemonType","type","pokemonMove","move","level_learned_at","version_group_details","payload","initialdata","pokemonReducer","action","pokemonFromFavourite","find","favPokemon","filter","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","store","createStore","persistor","persistStore","App","loading","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f6d47da.chunk.js","sourcesContent":["import { styled } from \"@mui/system\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography } from \"@mui/material\";\r\n\r\nexport const StyledAppBar = styled(AppBar)({\r\n  backgroundColor: \"black\",\r\n});\r\n\r\nexport const StyledLink = styled(Link)({\r\n  textDecoration: \"none\",\r\n});\r\nexport const StyledTitle = styled(Typography)({\r\n  cursor: \"pointer\",\r\n  color: \"white\",\r\n});\r\n","import React from \"react\";\r\nimport { StyledAppBar, StyledTitle, StyledLink } from \"./styles\";\r\nimport { Toolbar } from \"@mui/material\";\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <StyledAppBar position=\"fixed\">\r\n      <Toolbar>\r\n        <StyledLink to=\"/\">\r\n          <StyledTitle variant=\"h6\">Pokedex</StyledTitle>\r\n        </StyledLink>\r\n        <StyledLink to=\"/favourites\">\r\n          <StyledTitle variant=\"h6\" sx={{ ml: 5 }}>\r\n            Favourites\r\n          </StyledTitle>\r\n        </StyledLink>\r\n      </Toolbar>\r\n    </StyledAppBar>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import { Card, CardContent, CardMedia } from \"@mui/material\";\r\nimport { styled } from \"@mui/system\";\r\n\r\nexport const StyledCardMedia = styled(CardMedia)({\r\n  margin: \"auto\",\r\n  width: 130,\r\n  height: 130,\r\n});\r\nexport const StyledCard = styled(Card)({\r\n  cursor: \"pointer\",\r\n  backgroundColor: \"black\",\r\n  color: \"white\",\r\n  \"&:hover\": {\r\n    backgroundColor: \"rgb(90, 90, 90)\",\r\n  },\r\n});\r\nexport const StyledCardContent = styled(CardContent)({\r\n  textAlign: \"center\",\r\n});\r\n","import { Grid, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { StyledCard, StyledCardContent, StyledCardMedia } from \"./styles\";\r\n\r\nfunction PokemonCard(props) {\r\n  const { pokemon, image } = props;\r\n  const { id, name } = pokemon;\r\n  return (\r\n    <Grid item xs={12} sm={4} lg={2} key={id}>\r\n      <Link to={\"/pokemon/\" + id}>\r\n        <StyledCard>\r\n          <StyledCardMedia image={image} />\r\n          <StyledCardContent>\r\n            <Typography>{name}</Typography>\r\n            <Typography>#{id}</Typography>\r\n          </StyledCardContent>\r\n        </StyledCard>\r\n      </Link>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default PokemonCard;\r\n","import { Grid } from \"@mui/material\";\r\nimport { styled } from \"@mui/system\";\r\n\r\nexport const StyledPokedexContainer = styled(Grid)({\r\n  height: \"100vh\",\r\n  backgroundColor: \"rgb(68,68,68)\",\r\n  paddingTop: \"80px\",\r\n  textAlign: \"center\",\r\n});\r\n","import { Box } from \"@mui/system\";\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport PokemonCard from \"../../components/Cards/PokemonCard\";\r\nimport { StyledPokedexContainer } from \"./styles\";\r\n\r\nclass Favourites extends Component {\r\n  render() {\r\n    const { favourites } = this.props;\r\n    return (\r\n      <Box>\r\n        <StyledPokedexContainer container spacing={2}>\r\n          {favourites.map((pokemon) => {\r\n            return (\r\n              <PokemonCard\r\n                pokemon={pokemon}\r\n                key={pokemon.id}\r\n                image={pokemon.sprites.front_default}\r\n              />\r\n            );\r\n          })}\r\n        </StyledPokedexContainer>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  favourites: state.favourites,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Favourites);\r\n","export const POKEMON_API_URL = \"https://pokeapi.co/api/v2/pokemon\";\r\nexport const IMAGE_API_URL =\r\n  \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\";\r\n","import { Grid } from \"@mui/material\";\r\nimport { styled } from \"@mui/system\";\r\n\r\nexport const StyledGridContainer = styled(Grid)({\r\n  textAlign: \"center\",\r\n  padding: \"70px 10px 0px 10px\",\r\n  backgroundColor: \"rgb(68, 68, 68)\",\r\n});\r\n","import { CircularProgress } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PokemonCard from \"../../components/Cards/PokemonCard\";\r\nimport { IMAGE_API_URL, POKEMON_API_URL } from \"../../config\";\r\nimport { StyledGridContainer } from \"./styles\";\r\n\r\nfunction Pokedex() {\r\n  const [pokemonData, setPokemonData] = useState(null);\r\n  useEffect(() => {\r\n    axios.get(POKEMON_API_URL + \"?limit=898\").then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        const { results } = response.data;\r\n        let newPokemonData = [];\r\n        results.forEach((pokemon, index) => {\r\n          index++;\r\n          let pokemonObject = {\r\n            id: index,\r\n            url: IMAGE_API_URL + index + \".png\",\r\n            name: pokemon.name,\r\n          };\r\n          newPokemonData.push(pokemonObject);\r\n        });\r\n        setPokemonData(newPokemonData);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Box sx={{ mt: 10 }}>\r\n      {pokemonData ? (\r\n        <StyledGridContainer container spacing={2}>\r\n          {pokemonData.map((pokemon) => {\r\n            return (\r\n              <PokemonCard\r\n                pokemon={pokemon}\r\n                image={pokemon.url}\r\n                key={pokemon.id}\r\n              />\r\n            );\r\n          })}\r\n        </StyledGridContainer>\r\n      ) : (\r\n        <CircularProgress sx={{ mt: 100, color: \"black\" }} />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Pokedex;\r\n","import { Box, Button, Typography } from \"@mui/material\";\r\nimport { styled } from \"@mui/system\";\r\n\r\nexport const StyledBox = styled(Box)({\r\n  height: \"84vh\",\r\n  backgroundColor: \"black\",\r\n  color: \"white\",\r\n  marginTop: 75,\r\n  textAlign: \"center\",\r\n  borderRadius: 5,\r\n  paddingTop: 30,\r\n});\r\nexport const StyledMoveBox = styled(Box)({\r\n  backgroundColor: \"black\",\r\n  color: \"white\",\r\n  textAlign: \"center\",\r\n  borderRadius: 5,\r\n  padding: 30,\r\n});\r\nexport const StyledTitle = styled(Typography)({\r\n  textTransform: \"uppercase\",\r\n  fontFamily: \"fantasy\",\r\n});\r\nexport const StyledPokemonImage = styled(\"img\")({\r\n  width: \"350px\",\r\n  height: \"350px\",\r\n});\r\nexport const StyledPokemonInfoContainer = styled(Box)({\r\n  bottom: 60,\r\n  position: \"absolute\",\r\n  width: \"100%\",\r\n});\r\nexport const StyledHr = styled(\"hr\")({\r\n  height: \"0.01mm\",\r\n  width: \"95%\",\r\n});\r\nexport const StyledFavButton = styled(Button)({\r\n  height: 50,\r\n  width: 50,\r\n  marginTop: 15,\r\n});\r\nexport const StyledText = styled(Typography)({\r\n  fontSize: 30,\r\n  textTransform: \"capitalize\",\r\n});\r\nexport const StyledMoveTitle = styled(Typography)({\r\n  fontSize: 20,\r\n  textTransform: \"capitalize\",\r\n});\r\nexport const StyledMoveLevel = styled(Typography)({\r\n  fontSize: 20,\r\n  textTransform: \"capitalize\",\r\n});\r\nexport const StyledSpan = styled(\"span\")({\r\n  fontSize: 30,\r\n  textTransform: \"capitalize\",\r\n  fontStyle: \"italic\",\r\n});\r\n\r\nexport const StyledBr = styled(\"br\")({\r\n  \"@media (max-width: 898px)\": {\r\n    display: \"none\",\r\n  },\r\n});\r\n","export const TOGGLE_FAVOURITE = \"TOGGLE_FAVOURITE\";\r\n\r\nexport const toggleFavourite = (pokemon) => ({\r\n  type: TOGGLE_FAVOURITE,\r\n  payload: pokemon,\r\n});\r\n","import {\r\n  CircularProgress,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n} from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { POKEMON_API_URL } from \"../../config\";\r\nimport {\r\n  StyledBox,\r\n  StyledFavButton,\r\n  StyledHr,\r\n  StyledPokemonImage,\r\n  StyledPokemonInfoContainer,\r\n  StyledTitle,\r\n  StyledText,\r\n  StyledBr,\r\n  StyledSpan,\r\n  StyledMoveBox,\r\n  StyledMoveTitle,\r\n  StyledMoveLevel,\r\n} from \"./styles\";\r\nimport Favorite from \"@mui/icons-material/Favorite\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleFavourite } from \"../../redux/actions\";\r\n\r\nclass PokemonDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pokemon: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { match } = this.props;\r\n    if (match?.params) {\r\n      const { id } = match.params;\r\n\r\n      axios.get(POKEMON_API_URL + \"/\" + id).then((response) => {\r\n        if (response.status >= 200 && response.status < 300) {\r\n          this.setState({ pokemon: response.data });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  favouriteChecker(pokemon) {\r\n    let found = false;\r\n    this.props.favourites?.map((p) => {\r\n      if (p.id === pokemon.id) {\r\n        found = true;\r\n      }\r\n    });\r\n    return found;\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.favourites);\r\n    const { pokemon } = this.state;\r\n\r\n    if (pokemon) {\r\n      const { name, sprites, height, weight, types, id, moves } = pokemon;\r\n\r\n      return (\r\n        <Box>\r\n          <StyledBox>\r\n            <StyledTitle variant=\"h1\">{name}</StyledTitle>\r\n            <StyledPokemonImage src={sprites.front_default} />\r\n            <StyledPokemonInfoContainer>\r\n              <StyledHr />\r\n              <Grid container>\r\n                <Grid item xs={12} md={2}>\r\n                  <StyledFavButton\r\n                    sx={{\r\n                      color: this.favouriteChecker(pokemon) ? \"red\" : \"white\",\r\n                    }}\r\n                    onClick={() => this.props.toggleFavourite(pokemon)}\r\n                  >\r\n                    <Favorite sx={{ fontSize: 50 }} />\r\n                  </StyledFavButton>\r\n                </Grid>\r\n                <Grid item xs={6} md={2}>\r\n                  <StyledText>\r\n                    Number: <StyledBr />\r\n                    <StyledSpan> {id}</StyledSpan>\r\n                  </StyledText>\r\n                </Grid>\r\n                <Grid item xs={6} md={2}>\r\n                  <StyledText>\r\n                    Name: <StyledBr />\r\n                    <StyledSpan> {name}</StyledSpan>\r\n                  </StyledText>\r\n                </Grid>\r\n                <Grid item xs={6} md={2}>\r\n                  <StyledText>\r\n                    Height:\r\n                    <StyledBr />\r\n                    <StyledSpan> {height}m</StyledSpan>\r\n                  </StyledText>\r\n                </Grid>\r\n                <Grid item xs={6} md={2}>\r\n                  <StyledText>\r\n                    Weight:\r\n                    <StyledBr />\r\n                    <StyledSpan> {weight} kg</StyledSpan>\r\n                  </StyledText>\r\n                </Grid>\r\n\r\n                {types.map((pokemonType) => {\r\n                  const { name } = pokemonType.type;\r\n                  return (\r\n                    <Grid item xs={6} md={2}>\r\n                      <StyledText>\r\n                        Type:\r\n                        <StyledBr /> <StyledSpan> {name}</StyledSpan>\r\n                      </StyledText>\r\n                    </Grid>\r\n                  );\r\n                })}\r\n              </Grid>\r\n            </StyledPokemonInfoContainer>\r\n          </StyledBox>\r\n          <StyledMoveBox>\r\n            {moves.map((pokemonMove) => {\r\n              const { name } = pokemonMove.move;\r\n              const { level_learned_at } = pokemonMove.version_group_details[0];\r\n\r\n              return (\r\n                <Grid sx={{ textAlign: \"center\" }} container spacing={3}>\r\n                  <Grid item>\r\n                    <StyledMoveTitle>{name}:</StyledMoveTitle>\r\n                  </Grid>\r\n                  <Grid sx={{ textAlign: \"center\" }} item>\r\n                    <StyledMoveLevel>\r\n                      {level_learned_at === 0\r\n                        ? \"TM Taught\"\r\n                        : ` Learned at level ${level_learned_at}`}\r\n                    </StyledMoveLevel>\r\n                  </Grid>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </StyledMoveBox>\r\n        </Box>\r\n      );\r\n    } else {\r\n      return <CircularProgress />;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  favourites: state.favourites,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleFavourite: (pokemon) => dispatch(toggleFavourite(pokemon)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PokemonDetails);\r\n","import { TOGGLE_FAVOURITE } from \"./actions\";\r\n\r\nconst initialdata = {\r\n  favourites: [],\r\n};\r\n\r\nconst pokemonReducer = (state = initialdata, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_FAVOURITE:\r\n      let pokemon = action.payload;\r\n      let pokemonFromFavourite = state.favourites.find(\r\n        (favPokemon) => pokemon.id === favPokemon.id\r\n      );\r\n      return {\r\n        ...state,\r\n        favourites: pokemonFromFavourite\r\n          ? [\r\n              ...state.favourites.filter(\r\n                (pokemon) => pokemon.id !== pokemonFromFavourite.id\r\n              ),\r\n            ]\r\n          : [...state.favourites, action.payload],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default pokemonReducer;\r\n","import { createStore } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\r\n\r\nimport rootReducer from \"./reducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\nexport let store = createStore(persistedReducer);\r\nexport let persistor = persistStore(store);\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport Favourites from \"./containers/Favourites/Favourites\";\nimport Pokedex from \"./containers/Pokedex/Pokedex\";\nimport PokemonDetails from \"./containers/PokemonDetails/PokemonDetails\";\nimport { store, persistor } from \"./redux/store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Router>\n          <NavBar />\n          <Route exact path=\"/\" component={Pokedex} />\n          <Route exact path=\"/pokemon/:id\" component={PokemonDetails} />\n          <Route exact path=\"/favourites\" component={Favourites} />\n        </Router>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}